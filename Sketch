#include <Wire.h>
#include <LiquidCrystal_I2C.h> #include <Servo.h>
Servo myservo1; LiquidCrystal_I2C lcd(0x27,16,4);
int count=0; int x=0;
int y=0;
int buttonState ; int chk ;
unsigned char VfyPwd1[16]={0xef,0x01,0xff,0xff,0xff,0xff,0x01,0x00,0x07,0x13,0x00,0 x00,0x00,0x00,0x00,0x1b};//pswd protocol format
unsigned char GenImg1[12]={0xef,0x01,0xff,0xff,0xff,0xff,0x01,0x00,0x03,0x01,0x00,0 x05};//get finger images
unsigned char Img2Tz1[13]={0xef,0x01,0xff,0xff,0xff,0xff,0x01,0x00,0x04,0x02,0x01,0x 00,0x08};//select the char buffer1 or char buffer2
unsigned char Img2Tz2[13]={0xef,0x01,0xff,0xff,0xff,0xff,0x01,0x00,0x04,0x02,0x02,0x 00,0x09};//select the char buffer1 or char buffer2
unsigned char RegModel1[12]={0xef,0x01,0xff,0xff,0xff,0xff,0x01,0x00,0x03,0x05,0x00, 0x09};//to generate template
unsigned char Store[15]={0xef,0x01,0xff,0xff,0xff,0xff,0x01,0x00,0x06,0x06,0x01,0x00, 0x01,0x00,0x0F}; //store to page 1
unsigned char match1[12]={0xef,0x01,0xff,0xff,0xff,0xff,0x01,0x00,0x03,0x03,0x00,0x0 7}; //to match the content of buff1 and buff2
unsigned char deletchar[16]={0xEF,0x01,0xFF,0xFF,0xFF,0xFF,0x01,0x00,0x07,0x0C,0 x00,0x00,0x00,0x01,0x00,0x15};//PAGE1,TEMPLET1
26
unsigned char f_search[17]={0xEF,0x01,0xFF,0xFF,0xFF,0xFF,0x01,0x00,0x08,0x04,0x 01,0x00,0x00,0x00,0xA3,0x00,0xB1};
//EF-1-FF-FF-FF-FF-1-0-8-4-1-0-1-0-A3-0-B2
unsigned char deletall[12]={0xef,0x01,0xff,0xff,0xff,0xff,0x01,0x00,0x03,0x0d,0x00,0x1 1};
int password(void);
unsigned char read_keypad(void); void setup()
{ lcd.init(); // initialize the lcd lcd.init();
// Print a message to the LCD. lcd.backlight(); lcd.setCursor(1,0); lcd.print("Password based"); lcd.setCursor(1,1); lcd.print("Securtiy system"); delay(2000);
delay(2000); myservo1.attach(2); myservo1.write(100); lcd.clear();
pinMode(4, OUTPUT); pinMode(5, INPUT); pinMode(6, INPUT); pinMode(7, INPUT); pinMode(8, INPUT); pinMode(13, OUTPUT); pinMode(10, INPUT);
//digitalWrite(11,LOW); digitalWrite(4,HIGH); digitalWrite(5,HIGH); digitalWrite(6,HIGH); digitalWrite(7,HIGH); digitalWrite(8,HIGH);
27
digitalWrite(13,LOW);
Serial.begin(9600);
Serial.println("Password based Securtiy system"); delay(1000);
}
void loop()
{
lcd.clear(); lcd.setCursor(1,0); lcd.print(" press key");
int buttonState = digitalRead(10); Serial.print("s1= "); Serial.println(buttonState); delay(200);
if(buttonState == 0)
{
Serial.println("Enter Password"); delay(2000);
lcd.clear(); lcd.setCursor(1,0); lcd.print("Enter Password");
delay(2000);
chk = password();
if(chk == 1 && x == 0)
{
//digitalWrite(13,HIGH);
Serial.println("Password Matched.. Motor Started...");
lcd.clear(); lcd.setCursor(1,0);
lcd.print("PASSWORD MATCH");
lcd.setCursor(1,1);
28
lcd.print("LOCK OPEN"); myservo1.write(0); delay(5000);
delay(2000); delay(2000); lcd.clear(); delay(2000);
Serial.println("Now reset system for next test"); delay(100);
}
if(chk == 1 && y == 0)
{
//digitalWrite(13,LOW);
Serial.println("Password Matched.. Motor STOP...");
lcd.clear(); lcd.setCursor(1,0);
lcd.print("PASSWORD MATCH ");
delay(2000); lcd.setCursor(1,1); lcd.print("LOCK CLOSED"); delay(2000); myservo1.write(90); digitalWrite(13,LOW); delay(2000);
lcd.clear(); delay(2000);
Serial.println("Now reset system for next test"); delay(100);
}
else if (chk == 0 )
{
digitalWrite(13,HIGH);
{
29
lcd.clear();
lcd.setCursor(1,0);
lcd.print("PASSWORD NOT");
lcd.setCursor(1,1);
lcd.print("MATCHED"); delay(2000);
lcd.clear(); lcd.setCursor(1,0); lcd.print("BUZZER ON");
Serial.println("Password not matched.."); delay(5000);
digitalWrite(13,LOW);
}
}
else
{
lcd.clear(); lcd.setCursor(1,0);
lcd.print("RESET THE SYSTEM");
}
}
int password(void)
{
unsigned char key,pass[4]; unsigned int a=0; while(a<4)
{
Serial.print("a= "); Serial.print(a);
Serial.println(); delay(500); pass[a]=read_keypad(); if(pass[a]=='0')
Serial.println("Key not received"); delay(1000);
a++;
{
30
delay(500);
}
if(a == 4)
{
if((pass[0]=='2') && (pass[1]=='3') && (pass[2]=='1') && (pass[3]=='4'))
return 1;
}
else
{
return 0;
}
}
}
unsigned char read_keypad()
{
digitalWrite(4,LOW); if(digitalRead(5)==0)
{
Serial.print("1"); lcd.clear(); lcd.setCursor(1,0); lcd.print("1"); return '1';
}
if(digitalRead(6)==0)
{
lcd.setCursor(2,0); lcd.clear(); lcd.print("2");
Serial.print("2"); return '2';
}
if(digitalRead(7)==0)
{
lcd.clear(); lcd.setCursor(3,0);
{
31
lcd.print("3");
Serial.print("3"); return '3';
}
if(digitalRead(8)==0cd.setCursor(4,0); lcd.clear(); lcd.print("4");
Serial.print("4"); return '4';
}
return '0'; delay(2000);
}
